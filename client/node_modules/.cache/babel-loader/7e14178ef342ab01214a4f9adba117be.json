{"ast":null,"code":"import _defineProperty from \"/Users/kulachithapar/Desktop/bloggy-master/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { RESET_POST, CREATE_POST, GET_POST, GET_POSTS, UPDATE_POST, DELETE_POST, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING } from \"../actions/types\";\nconst initialState = {\n  post: {},\n  posts: [],\n  postLoading: false,\n  postsLoading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_POST:\n      return _objectSpread({}, state, {\n        posts: [...state.posts, action.payload]\n      });\n\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        post: {},\n        posts: [...action.payload]\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, action.payload[0])\n      });\n\n    case UPDATE_POST:\n      const posts = state.posts.filter(post => post._id !== action.payload._id);\n      return _objectSpread({}, state, {\n        post: {},\n        posts: [...posts, action.payload]\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== action.payload)\n      });\n\n    case TOGGLE_POST_LOADING:\n      return _objectSpread({}, state, {\n        postLoading: !state.postLoading\n      });\n\n    case TOGGLE_POSTS_LOADING:\n      return _objectSpread({}, state, {\n        postsLoading: !state.postsLoading\n      });\n\n    case RESET_POST:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kulachithapar/Desktop/bloggy-master/client/src/reducers/postReducer.js"],"names":["RESET_POST","CREATE_POST","GET_POST","GET_POSTS","UPDATE_POST","DELETE_POST","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","initialState","post","posts","postLoading","postsLoading","state","action","type","payload","filter","_id"],"mappings":";;;;;;AAAA,SACGA,UADH,EAEGC,WAFH,EAGGC,QAHH,EAIGC,SAJH,EAKGC,WALH,EAMGC,WANH,EAOGC,oBAPH,EAQGC,mBARH,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,WAAW,EAAE,KAHK;AAIlBC,EAAAA,YAAY,EAAE;AAJI,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKd,WAAL;AACG,+BACMY,KADN;AAEGH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFV;;AAIH,SAAKb,SAAL;AACG,+BACMU,KADN;AAEGJ,QAAAA,IAAI,EAAE,EAFT;AAGGC,QAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAHV;;AAKH,SAAKd,QAAL;AACG,+BACMW,KADN;AAEGJ,QAAAA,IAAI,oBAAOK,MAAM,CAACE,OAAP,CAAe,CAAf,CAAP;AAFP;;AAIH,SAAKZ,WAAL;AACG,YAAMM,KAAK,GAAGG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CACXR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAM,CAACE,OAAP,CAAeE,GADzB,CAAd;AAGA,+BACML,KADN;AAEGJ,QAAAA,IAAI,EAAE,EAFT;AAGGC,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWI,MAAM,CAACE,OAAlB;AAHV;;AAKH,SAAKX,WAAL;AACG,+BACMQ,KADN;AAEGH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAM,CAACE,OAA/C;AAFV;;AAIH,SAAKT,mBAAL;AACG,+BACMM,KADN;AAEGF,QAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFvB;;AAIH,SAAKL,oBAAL;AACG,+BACMO,KADN;AAEGD,QAAAA,YAAY,EAAE,CAACC,KAAK,CAACD;AAFxB;;AAIH,SAAKZ,UAAL;AACG,aAAOQ,YAAP;;AACH;AACG,aAAOK,KAAP;AA5CN;AA8CF","sourcesContent":["import {\n   RESET_POST,\n   CREATE_POST,\n   GET_POST,\n   GET_POSTS,\n   UPDATE_POST,\n   DELETE_POST,\n   TOGGLE_POSTS_LOADING,\n   TOGGLE_POST_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n   post: {},\n   posts: [],\n   postLoading: false,\n   postsLoading: false\n};\n\nexport default function(state = initialState, action) {\n   switch (action.type) {\n      case CREATE_POST:\n         return {\n            ...state,\n            posts: [...state.posts, action.payload]\n         };\n      case GET_POSTS:\n         return {\n            ...state,\n            post: {},\n            posts: [...action.payload]\n         };\n      case GET_POST:\n         return {\n            ...state,\n            post: { ...action.payload[0] }\n         };\n      case UPDATE_POST:\n         const posts = state.posts.filter(\n            post => post._id !== action.payload._id\n         );\n         return {\n            ...state,\n            post: {},\n            posts: [...posts, action.payload]\n         };\n      case DELETE_POST:\n         return {\n            ...state,\n            posts: state.posts.filter(post => post._id !== action.payload)\n         };\n      case TOGGLE_POST_LOADING:\n         return {\n            ...state,\n            postLoading: !state.postLoading\n         };\n      case TOGGLE_POSTS_LOADING:\n         return {\n            ...state,\n            postsLoading: !state.postsLoading\n         };\n      case RESET_POST:\n         return initialState;\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}